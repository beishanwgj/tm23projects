基于文本挖掘的电商产品评论数据情感分析
王广坚 221017000221
{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ——  基于文本挖掘的电商产品评论数据情感分析  ——"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1.案例简介\n",
    "\n",
    "    1、利用文本挖掘技术，对碎片化、非结构化的电商网站评论数据进行清洗与处理，转化为结构化数据。\n",
    "    2、参考知网发布的情感分析用词语集，统计评论数据的正负情感指数，然后进行情感分析,通过词云图直观查看正负评论的关键词。\n",
    "    3、比较“机器挖掘的正负情感”与“人工打标签的正负情感”，精度达到89%。\n",
    "    4、采用LDA主题模型提取评论关键信息，以了解用户的需求、意见、购买原因、产品的优缺点等。\n",
    "    \n",
    "####    说明：本案例侧重分析思路及代码实现，不深入展开分析结果的业务解释与决策指导！\n",
    "\n",
    "    \n",
    "    参考材料《Python数据分析与挖掘实战》"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.框架\n",
    "\n",
    "    工具准备\n",
    "    \n",
    "    一、导入数据\n",
    "    二、数据预处理\n",
    "        （一）去重\n",
    "        （二）数据清洗\n",
    "        （三）分词、词性标注、去除停用词、词云图\n",
    "    三、模型构建\n",
    "        （一）决策树\n",
    "        （二）情感分析\n",
    "        （三）基于LDA模型的主题分析"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 工具准备"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from matplotlib.pylab import style #自定义图表风格\n",
    "style.use('ggplot')\n",
    "from IPython.core.interactiveshell import InteractiveShell\n",
    "InteractiveShell.ast_node_interactivity = \"all\"\n",
    "plt.rcParams['font.sans-serif'] = ['Simhei'] # 解决中文乱码问题\n",
    "\n",
    "import re\n",
    "import jieba.posseg as psg\n",
    "import itertools\n",
    "#conda install -c anaconda gensim\n",
    "from gensim import corpora,models #主题挖掘，提取关键信息\n",
    "\n",
    "# pip install wordcloud\n",
    "from wordcloud import WordCloud,ImageColorGenerator\n",
    "from collections import Counter\n",
    "\n",
    "from sklearn import tree\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.metrics import accuracy_score\n",
    "import graphviz"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 注意\n",
    "\n",
    "    以下方法，是为了帮助我们直观查看对象处理的结果。是辅助代码，非必要代码！\n",
    "    .head()\n",
    "    print()\n",
    "    len()\n",
    "    .shape\n",
    "    .unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 一、导入数据"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>creationTime</th>\n",
       "      <th>nickname</th>\n",
       "      <th>referenceName</th>\n",
       "      <th>content_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>东西收到这么久，都忘了去好评，美的大品牌，值得信赖，东西整体来看，个人感觉还不错，没有出现什...</td>\n",
       "      <td>2017-04-17 13:01:54</td>\n",
       "      <td>鑫***辰</td>\n",
       "      <td>美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>安装师傅很给力，热水器也好用，感谢美的。</td>\n",
       "      <td>2017-04-17 10:45:33</td>\n",
       "      <td>切***药</td>\n",
       "      <td>美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>还没安装，基本满意</td>\n",
       "      <td>2017-04-17 10:58:33</td>\n",
       "      <td>j***x</td>\n",
       "      <td>美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>电热水器收到了，京东自营商品就是好，发货速度快，品质有保障，安装效果好，宝贝非常喜欢，冬天可...</td>\n",
       "      <td>2017-10-18 20:22:33</td>\n",
       "      <td>j***2</td>\n",
       "      <td>美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>用了几次才来评价，对产品非常满意，加热快保温时间长，售后服务特别好，主动打电话询问送货情况帮...</td>\n",
       "      <td>2017-04-17 09:19:16</td>\n",
       "      <td>j***6</td>\n",
       "      <td>美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             content         creationTime  \\\n",
       "0  东西收到这么久，都忘了去好评，美的大品牌，值得信赖，东西整体来看，个人感觉还不错，没有出现什...  2017-04-17 13:01:54   \n",
       "1                               安装师傅很给力，热水器也好用，感谢美的。  2017-04-17 10:45:33   \n",
       "2                                          还没安装，基本满意  2017-04-17 10:58:33   \n",
       "3  电热水器收到了，京东自营商品就是好，发货速度快，品质有保障，安装效果好，宝贝非常喜欢，冬天可...  2017-10-18 20:22:33   \n",
       "4  用了几次才来评价，对产品非常满意，加热快保温时间长，售后服务特别好，主动打电话询问送货情况帮...  2017-04-17 09:19:16   \n",
       "\n",
       "  nickname                            referenceName content_type  \n",
       "0    鑫***辰  美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)          pos  \n",
       "1    切***药  美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)          pos  \n",
       "2    j***x  美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)          pos  \n",
       "3    j***2  美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)          pos  \n",
       "4    j***6  美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)          pos  "
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data=pd.read_csv('./reviews.csv')\n",
    "raw_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2000 entries, 0 to 1999\n",
      "Data columns (total 5 columns):\n",
      "content          2000 non-null object\n",
      "creationTime     2000 non-null object\n",
      "nickname         2000 non-null object\n",
      "referenceName    2000 non-null object\n",
      "content_type     2000 non-null object\n",
      "dtypes: object(5)\n",
      "memory usage: 78.2+ KB\n"
     ]
    }
   ],
   "source": [
    "raw_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['content', 'creationTime', 'nickname', 'referenceName', 'content_type'], dtype='object')"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2016-06-24 22:35:42    2\n",
       "2015-06-25 17:36:36    2\n",
       "2016-06-24 17:42:26    2\n",
       "2016-06-20 16:03:00    2\n",
       "2017-10-06 13:12:19    1\n",
       "                      ..\n",
       "2017-10-22 08:08:35    1\n",
       "2017-03-25 15:59:46    1\n",
       "2017-10-01 10:13:38    1\n",
       "2017-07-03 13:10:14    1\n",
       "2017-03-19 10:19:17    1\n",
       "Name: creationTime, Length: 1996, dtype: int64"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "j***1    34\n",
       "j***6    30\n",
       "j***2    25\n",
       "j***b    25\n",
       "j***f    23\n",
       "         ..\n",
       "a***1     1\n",
       "切***药     1\n",
       "无***主     1\n",
       "小***热     1\n",
       "费***能     1\n",
       "Name: nickname, Length: 1190, dtype: int64"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "美的（Midea）60升预约洗浴 无线遥控 电热水器 F60-15WB5(Y)    2000\n",
       "Name: referenceName, dtype: int64"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "neg    1000\n",
       "pos    1000\n",
       "Name: content_type, dtype: int64"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#取值分布\n",
    "for cate in ['creationTime', 'nickname', 'referenceName', 'content_type']:\n",
    "    raw_data[cate].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 二、数据预处理"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### （一）去重\n",
    "\n",
    "删除系统自动为客户做出的评论。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "去重之前： 2000\n",
      "去重之后： 1974\n"
     ]
    }
   ],
   "source": [
    "reviews=raw_data.copy()\n",
    "reviews=reviews[['content', 'content_type']]\n",
    "print('去重之前：',reviews.shape[0])\n",
    "reviews=reviews.drop_duplicates()\n",
    "print('去重之后：',reviews.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### （二）数据清洗"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "物美价廉啊，特别划算的，而且加热速度快。家里用着不错特别方便\n",
      "-----------\n",
      "价格合理，配置挺高，物美价值\n",
      "-----------\n",
      "老师按装是快的，装修中。没试。希望是正常的！\n",
      "-----------\n",
      "五分是习惯\r\n",
      "送的快，装的也快，很好，不过装修进行中，为了吊顶只装了热水器，其它后话吧。\r\n",
      "我也是醉了，热水器遥控器没电池，还是安装哥车里有一个备用的给装上了。\r\n",
      "要赠送的电动牙刷，空气净化器等待配送中&hellip;&hellip;。\r\n",
      "一天时间冰箱降100、洗衣机降40、热水器降100、小厨宝降30、烟灶套降100。不过客服说上报解决，电话通知等待中&hellip;&hellip;\n",
      "-----------\n",
      "安装的小哥非常好，工作很尽心，我们家是老房子，安装比一般家要费力。安装的非常不错。因为整栋楼要用热水，裙子只能这样装。给小哥点个赞。热水器已经买二个了，一如既往地好用。美的大品牌，质量非常好\n",
      "-----------\n"
     ]
    }
   ],
   "source": [
    "# 清洗之前\n",
    "content=reviews['content']\n",
    "for i in range(5,10):\n",
    "    print(content[i])\n",
    "    print('-----------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "物美价廉啊，特别划算的，而且加热速度快。家里用着不错特别方便\n",
      "-----------\n",
      "价格合理，配置挺高，物美价值\n",
      "-----------\n",
      "老师按装是快的，装修中。没试。希望是正常的！\n",
      "-----------\n",
      "五分是习惯\r\n",
      "送的快，装的也快，很好，不过装修进行中，为了吊顶只装了，其它后话吧。\r\n",
      "我也是醉了，遥控器没电池，还是安装哥车里有一个备用的给装上了。\r\n",
      "要赠送的电动牙刷，空气净化器等待配送中&;&;。\r\n",
      "一天时间冰箱降、洗衣机降、降、小厨宝降、烟灶套降。不过客服说上报解决，电话通知等待中&;&;\n",
      "-----------\n",
      "安装的小哥非常好，工作很尽心，我们家是老房子，安装比一般家要费力。安装的非常不错。因为整栋楼要用热水，裙子只能这样装。给小哥点个赞。已经买二个了，一如既往地好用。大品牌，质量非常好\n",
      "-----------\n"
     ]
    }
   ],
   "source": [
    "#清洗之后，将数字、字母、京东美的电热水器字样都删除\n",
    "info=re.compile('[0-9a-zA-Z]|京东|美的|电热水器|热水器|')\n",
    "content=content.apply(lambda x: info.sub('',x))  #替换所有匹配项\n",
    "\n",
    "for i in range(5,10):\n",
    "    print(content[i])\n",
    "    print('-----------')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### （三）分词、词性标注、去除停用词、词云图"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(1)分词"
   ]
  },
  {
   "attachments": {
    "image.png": {    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "目标\n",
    "   \n",
    "    输入：\n",
    "    - content、content_type\n",
    "    - 共有1974条评论句子\n",
    "    输出：\n",
    "    - 构造DF，包含： 分词、对应词性、分词所在原句子的id、分词所在原句子的content_type\n",
    "    - 共有6万多行\n",
    "    \n",
    "    非结构化数据——>结构化数据\n",
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1974,)"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1974"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('物美价廉', 'l'), ('啊', 'zg'), ('，', 'x'), ('特别', 'd'), ('划算', 'v'), ('的', 'uj'), ('，', 'x'), ('而且', 'c'), ('加热', 'v'), ('速度', 'n'), ('快', 'a'), ('。', 'x'), ('家里', 's'), ('用', 'p'), ('着', 'uz'), ('不错', 'a'), ('特别', 'd'), ('方便', 'a')]\n"
     ]
    }
   ],
   "source": [
    "#分词，由元组组成的list\n",
    "seg_content=content.apply( lambda s:  [(x.word,x.flag) for x in psg.cut(s)] )  \n",
    "\n",
    "seg_content.shape\n",
    "len(seg_content)\n",
    "print(seg_content[5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1974"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "0    32\n",
       "1    11\n",
       "2     6\n",
       "3    39\n",
       "4    44\n",
       "5    18\n",
       "Name: content, dtype: int64"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#统计评论词数\n",
    "n_word=seg_content.apply(lambda s: len(s))\n",
    "\n",
    "len(n_word)\n",
    "n_word.head(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "63794"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#得到各分词在第几条评论\n",
    "n_content=[ [x+1]*y for x,y in zip(list(seg_content.index),list(n_word))] #[x+1]*y,表示复制y份，由list组成的list\n",
    "index_content_long=sum(n_content,[]) #表示去掉[]，拉平,返回list\n",
    "len(index_content_long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 2, 3, 3, 3]"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum([[2,2],[3,3,3]],[])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    [(东西, ns), (收到, v), (这么久, r), (，, x), (都, d), ...\n",
       "1    [(安装, v), (师傅, nr), (很, d), (给, p), (力, n), (，...\n",
       "2    [(还, d), (没, v), (安装, v), (，, x), (基本, n), (满意...\n",
       "3    [(收到, v), (了, ul), (，, x), (自营, vn), (商品, n), ...\n",
       "4    [(用, p), (了, ul), (几次, m), (才, d), (来, v), (评价...\n",
       "Name: content, dtype: object"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[('东西', 'ns'),\n",
       " ('收到', 'v'),\n",
       " ('这么久', 'r'),\n",
       " ('，', 'x'),\n",
       " ('都', 'd'),\n",
       " ('忘', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('去', 'v'),\n",
       " ('好评', 'v'),\n",
       " ('，', 'x'),\n",
       " ('大', 'a'),\n",
       " ('品牌', 'n'),\n",
       " ('，', 'x'),\n",
       " ('值得', 'v'),\n",
       " ('信赖', 'n'),\n",
       " ('，', 'x'),\n",
       " ('东西', 'ns'),\n",
       " ('整体', 'n'),\n",
       " ('来看', 'u'),\n",
       " ('，', 'x'),\n",
       " ('个人感觉', 'n'),\n",
       " ('还', 'd'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('没有', 'v'),\n",
       " ('出现', 'v'),\n",
       " ('什么', 'r'),\n",
       " ('问题', 'n'),\n",
       " ('，', 'x'),\n",
       " ('值得', 'v'),\n",
       " ('拥有', 'v'),\n",
       " ('！', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('师傅', 'nr'),\n",
       " ('很', 'd'),\n",
       " ('给', 'p'),\n",
       " ('力', 'n'),\n",
       " ('，', 'x'),\n",
       " ('也好', 'y'),\n",
       " ('用', 'p'),\n",
       " ('，', 'x'),\n",
       " ('感谢', 'v'),\n",
       " ('。', 'x'),\n",
       " ('还', 'd'),\n",
       " ('没', 'v'),\n",
       " ('安装', 'v'),\n",
       " ('，', 'x'),\n",
       " ('基本', 'n'),\n",
       " ('满意', 'v'),\n",
       " ('收到', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('自营', 'vn'),\n",
       " ('商品', 'n'),\n",
       " ('就是', 'd'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('发货', 'n'),\n",
       " ('速度', 'n'),\n",
       " ('快', 'a'),\n",
       " ('，', 'x'),\n",
       " ('品质', 'n'),\n",
       " ('有', 'v'),\n",
       " ('保障', 'v'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('效果', 'n'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('宝贝', 'nr'),\n",
       " ('非常', 'd'),\n",
       " ('喜欢', 'v'),\n",
       " ('，', 'x'),\n",
       " ('冬天', 't'),\n",
       " ('可以', 'c'),\n",
       " ('小时', 'n'),\n",
       " ('有', 'v'),\n",
       " ('热水', 'n'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('自营', 'vn'),\n",
       " ('值得', 'v'),\n",
       " ('信赖', 'n'),\n",
       " ('，', 'x'),\n",
       " ('值得', 'v'),\n",
       " ('推荐', 'v'),\n",
       " ('自营', 'vn'),\n",
       " ('。', 'x'),\n",
       " ('用', 'p'),\n",
       " ('了', 'ul'),\n",
       " ('几次', 'm'),\n",
       " ('才', 'd'),\n",
       " ('来', 'v'),\n",
       " ('评价', 'n'),\n",
       " ('，', 'x'),\n",
       " ('对', 'p'),\n",
       " ('产品', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('满意', 'v'),\n",
       " ('，', 'x'),\n",
       " ('加热', 'v'),\n",
       " ('快', 'a'),\n",
       " ('保温', 'n'),\n",
       " ('时间', 'n'),\n",
       " ('长', 'a'),\n",
       " ('，', 'x'),\n",
       " ('售后服务', 'l'),\n",
       " ('特别', 'd'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('主动', 'b'),\n",
       " ('打电话', 'l'),\n",
       " ('询问', 'v'),\n",
       " ('送货', 'v'),\n",
       " ('情况', 'n'),\n",
       " ('帮', 'v'),\n",
       " ('我', 'r'),\n",
       " ('联系', 'n'),\n",
       " ('安装', 'v'),\n",
       " ('，', 'x'),\n",
       " ('非常感谢', 'i'),\n",
       " ('售后', 'n'),\n",
       " ('大姐', 'n'),\n",
       " ('的', 'uj'),\n",
       " ('服务', 'vn'),\n",
       " ('！', 'x'),\n",
       " ('下次', 't'),\n",
       " ('购买', 'v'),\n",
       " ('还', 'd'),\n",
       " ('会', 'v'),\n",
       " ('考虑', 'v'),\n",
       " ('！', 'x'),\n",
       " ('物美价廉', 'l'),\n",
       " ('啊', 'zg'),\n",
       " ('，', 'x'),\n",
       " ('特别', 'd'),\n",
       " ('划算', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('而且', 'c'),\n",
       " ('加热', 'v'),\n",
       " ('速度', 'n'),\n",
       " ('快', 'a'),\n",
       " ('。', 'x'),\n",
       " ('家里', 's'),\n",
       " ('用', 'p'),\n",
       " ('着', 'uz'),\n",
       " ('不错', 'a'),\n",
       " ('特别', 'd'),\n",
       " ('方便', 'a'),\n",
       " ('价格合理', 'n'),\n",
       " ('，', 'x'),\n",
       " ('配置', 'v'),\n",
       " ('挺', 'd'),\n",
       " ('高', 'a'),\n",
       " ('，', 'x'),\n",
       " ('物美', 'nz'),\n",
       " ('价值', 'n'),\n",
       " ('老师', 'n'),\n",
       " ('按', 'p'),\n",
       " ('装', 'v'),\n",
       " ('是', 'v'),\n",
       " ('快', 'a'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('装修', 'v'),\n",
       " ('中', 'f'),\n",
       " ('。', 'x'),\n",
       " ('没', 'v'),\n",
       " ('试', 'v'),\n",
       " ('。', 'x'),\n",
       " ('希望', 'v'),\n",
       " ('是', 'v'),\n",
       " ('正常', 'd'),\n",
       " ('的', 'uj'),\n",
       " ('！', 'x'),\n",
       " ('五分', 'm'),\n",
       " ('是', 'v'),\n",
       " ('习惯', 'n'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('送', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('快', 'a'),\n",
       " ('，', 'x'),\n",
       " ('装', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('也', 'd'),\n",
       " ('快', 'a'),\n",
       " ('，', 'x'),\n",
       " ('很', 'd'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('不过', 'c'),\n",
       " ('装修', 'v'),\n",
       " ('进行', 'v'),\n",
       " ('中', 'f'),\n",
       " ('，', 'x'),\n",
       " ('为了', 'p'),\n",
       " ('吊顶', 'n'),\n",
       " ('只', 'd'),\n",
       " ('装', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('其它', 'r'),\n",
       " ('后', 'f'),\n",
       " ('话', 'n'),\n",
       " ('吧', 'y'),\n",
       " ('。', 'x'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('我', 'r'),\n",
       " ('也', 'd'),\n",
       " ('是', 'v'),\n",
       " ('醉', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('遥控器', 'n'),\n",
       " ('没', 'v'),\n",
       " ('电池', 'n'),\n",
       " ('，', 'x'),\n",
       " ('还是', 'c'),\n",
       " ('安装', 'v'),\n",
       " ('哥', 'n'),\n",
       " ('车里', 's'),\n",
       " ('有', 'v'),\n",
       " ('一个', 'm'),\n",
       " ('备用', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('给装', 'v'),\n",
       " ('上', 'f'),\n",
       " ('了', 'ul'),\n",
       " ('。', 'x'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('要', 'v'),\n",
       " ('赠送', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('电动牙刷', 'l'),\n",
       " ('，', 'x'),\n",
       " ('空气', 'n'),\n",
       " ('净化器', 'n'),\n",
       " ('等待', 'v'),\n",
       " ('配送', 'v'),\n",
       " ('中', 'ns'),\n",
       " ('&', 'x'),\n",
       " (';', 'x'),\n",
       " ('&', 'x'),\n",
       " (';', 'x'),\n",
       " ('。', 'x'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('一天', 'm'),\n",
       " ('时间', 'n'),\n",
       " ('冰箱', 'n'),\n",
       " ('降', 'v'),\n",
       " ('、', 'x'),\n",
       " ('洗衣机', 'n'),\n",
       " ('降', 'v'),\n",
       " ('、', 'x'),\n",
       " ('降', 'v'),\n",
       " ('、', 'x'),\n",
       " ('小厨', 'n'),\n",
       " ('宝降', 'nr'),\n",
       " ('、', 'x'),\n",
       " ('烟灶', 'n'),\n",
       " ('套降', 'v'),\n",
       " ('。', 'x'),\n",
       " ('不过', 'c'),\n",
       " ('客服', 'n'),\n",
       " ('说', 'v'),\n",
       " ('上报', 'v'),\n",
       " ('解决', 'v'),\n",
       " ('，', 'x'),\n",
       " ('电话', 'n'),\n",
       " ('通知', 'v'),\n",
       " ('等待', 'v'),\n",
       " ('中', 'ns'),\n",
       " ('&', 'x'),\n",
       " (';', 'x'),\n",
       " ('&', 'x'),\n",
       " (';', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('小哥', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('工作', 'vn'),\n",
       " ('很', 'zg'),\n",
       " ('尽心', 'd'),\n",
       " ('，', 'x'),\n",
       " ('我们', 'r'),\n",
       " ('家', 'm'),\n",
       " ('是', 'v'),\n",
       " ('老房子', 'n'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('比', 'p'),\n",
       " ('一般', 'a'),\n",
       " ('家', 'm'),\n",
       " ('要', 'v'),\n",
       " ('费力', 'n'),\n",
       " ('。', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('非常', 'd'),\n",
       " ('不错', 'a'),\n",
       " ('。', 'x'),\n",
       " ('因为', 'c'),\n",
       " ('整栋', 'm'),\n",
       " ('楼', 'n'),\n",
       " ('要', 'v'),\n",
       " ('用', 'p'),\n",
       " ('热水', 'n'),\n",
       " ('，', 'x'),\n",
       " ('裙子', 'n'),\n",
       " ('只能', 'v'),\n",
       " ('这样', 'r'),\n",
       " ('装', 'v'),\n",
       " ('。', 'x'),\n",
       " ('给', 'p'),\n",
       " ('小哥', 'n'),\n",
       " ('点', 'm'),\n",
       " ('个', 'm'),\n",
       " ('赞', 'v'),\n",
       " ('。', 'x'),\n",
       " ('已经', 'd'),\n",
       " ('买', 'v'),\n",
       " ('二个', 'm'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('一如既往', 'i'),\n",
       " ('地', 'uv'),\n",
       " ('好用', 'v'),\n",
       " ('。', 'x'),\n",
       " ('大', 'a'),\n",
       " ('品牌', 'n'),\n",
       " ('，', 'x'),\n",
       " ('质量', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('好', 'a'),\n",
       " ('前', 'f'),\n",
       " ('天下', 's'),\n",
       " ('单买', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('今天', 't'),\n",
       " ('就', 'd'),\n",
       " ('用上', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('目前', 't'),\n",
       " ('没有', 'v'),\n",
       " ('发现', 'v'),\n",
       " ('问题', 'n'),\n",
       " ('，', 'x'),\n",
       " ('比', 'p'),\n",
       " ('街上', 's'),\n",
       " ('卖', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('便宜', 'a'),\n",
       " ('很多', 'm'),\n",
       " ('，', 'x'),\n",
       " ('店家', 'n'),\n",
       " ('都', 'd'),\n",
       " ('说', 'v'),\n",
       " ('和', 'c'),\n",
       " ('网上', 's'),\n",
       " ('比', 'p'),\n",
       " ('他家', 'r'),\n",
       " ('贵', 'a'),\n",
       " ('很多', 'm'),\n",
       " ('，', 'x'),\n",
       " ('我', 'r'),\n",
       " ('当', 'p'),\n",
       " ('老板', 'n'),\n",
       " ('面', 'n'),\n",
       " ('直接', 'ad'),\n",
       " ('在', 'p'),\n",
       " ('网上', 's'),\n",
       " ('比', 'p'),\n",
       " ('的', 'uj'),\n",
       " ('?', 'x'),\n",
       " ('冲着', 'p'),\n",
       " ('元', 'm'),\n",
       " ('以内', 'f'),\n",
       " ('.', 'x'),\n",
       " ('变频', 'vn'),\n",
       " ('级', 'q'),\n",
       " ('能效', 'n'),\n",
       " ('，', 'x'),\n",
       " ('制冷', 'v'),\n",
       " ('效果', 'n'),\n",
       " ('还', 'd'),\n",
       " ('不错', 'a'),\n",
       " ('。', 'x'),\n",
       " ('很', 'd'),\n",
       " ('好', 'a'),\n",
       " ('以后', 'f'),\n",
       " ('还', 'd'),\n",
       " ('在', 'p'),\n",
       " ('购物', 'n'),\n",
       " ('，', 'x'),\n",
       " ('我', 'r'),\n",
       " ('去', 'v'),\n",
       " ('别的', 'r'),\n",
       " ('电器', 'n'),\n",
       " ('问', 'v'),\n",
       " ('我', 'r'),\n",
       " ('这', 'r'),\n",
       " ('型号', 'n'),\n",
       " ('，', 'x'),\n",
       " ('说', 'v'),\n",
       " ('没有', 'v'),\n",
       " ('我', 'r'),\n",
       " ('这个', 'r'),\n",
       " ('型号', 'n'),\n",
       " ('，', 'x'),\n",
       " ('有', 'v'),\n",
       " ('相识', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('元', 'm'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('，', 'x'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('买', 'v'),\n",
       " ('家电', 'j'),\n",
       " ('的', 'uj'),\n",
       " ('还', 'd'),\n",
       " ('说', 'v'),\n",
       " ('我', 'r'),\n",
       " ('这', 'r'),\n",
       " ('下线', 'n'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('师傅', 'nr'),\n",
       " ('说', 'v'),\n",
       " ('，', 'x'),\n",
       " ('我', 'r'),\n",
       " ('是', 'v'),\n",
       " ('普通', 'nz'),\n",
       " ('的', 'uj'),\n",
       " ('挺好', 'a'),\n",
       " ('的', 'uj'),\n",
       " ('。', 'x'),\n",
       " ('加热', 'v'),\n",
       " ('很快', 'd'),\n",
       " ('，', 'x'),\n",
       " ('购物', 'n'),\n",
       " ('很', 'zg'),\n",
       " ('满意', 'v'),\n",
       " ('，', 'x'),\n",
       " ('还', 'd'),\n",
       " ('没', 'd'),\n",
       " ('走用', 'v'),\n",
       " ('，', 'x'),\n",
       " ('安装费', 'n'),\n",
       " ('花元', 'nr'),\n",
       " ('，', 'x'),\n",
       " ('带', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('喷头', 'v'),\n",
       " ('不能', 'v'),\n",
       " ('用', 'p'),\n",
       " ('槊', 'g'),\n",
       " ('料', 'n'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('得', 'ud'),\n",
       " ('自己', 'r'),\n",
       " ('买', 'v'),\n",
       " ('花', 'v'),\n",
       " ('伞', 'n'),\n",
       " ('。', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('还', 'd'),\n",
       " ('得', 'ud'),\n",
       " (' ', 'x'),\n",
       " ('元', 'm'),\n",
       " ('。', 'x'),\n",
       " ('\\r\\n', 'x'),\n",
       " ('麻烦', 'an'),\n",
       " ('啊', 'zg'),\n",
       " ('，', 'x'),\n",
       " ('物流', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('快', 'a'),\n",
       " ('，', 'x'),\n",
       " ('早上', 't'),\n",
       " ('送来', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('中午', 't'),\n",
       " ('就', 'd'),\n",
       " ('可以', 'c'),\n",
       " ('安装', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('时候', 'n'),\n",
       " ('也', 'd'),\n",
       " ('非常', 'd'),\n",
       " ('认真', 'ad'),\n",
       " ('安装', 'v'),\n",
       " ('师傅', 'nr'),\n",
       " ('非常', 'd'),\n",
       " ('认真', 'ad'),\n",
       " ('，', 'x'),\n",
       " ('负责', 'v'),\n",
       " ('任', 'r'),\n",
       " ('，', 'x'),\n",
       " ('刚', 'd'),\n",
       " ('开始', 'v'),\n",
       " ('用', 'p'),\n",
       " ('，', 'x'),\n",
       " ('还', 'd'),\n",
       " ('不', 'd'),\n",
       " ('知道', 'v'),\n",
       " ('效果', 'n'),\n",
       " ('怎么样', 'r'),\n",
       " ('，', 'x'),\n",
       " ('但是', 'c'),\n",
       " ('售后', 'n'),\n",
       " ('确实', 'ad'),\n",
       " ('挺', 'd'),\n",
       " ('好', 'a'),\n",
       " ('各', 'r'),\n",
       " ('方面', 'n'),\n",
       " ('都', 'd'),\n",
       " ('很', 'd'),\n",
       " ('满意', 'v'),\n",
       " ('，', 'x'),\n",
       " ('从', 'p'),\n",
       " ('价格', 'n'),\n",
       " ('，', 'x'),\n",
       " ('产品质量', 'n'),\n",
       " ('，', 'x'),\n",
       " ('货运', 'n'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('调试', 'vn'),\n",
       " ('，', 'x'),\n",
       " ('工作人员', 'n'),\n",
       " ('服务态度', 'n'),\n",
       " ('方面', 'n'),\n",
       " ('，', 'x'),\n",
       " ('还有', 'v'),\n",
       " ('售后服务', 'l'),\n",
       " ('。', 'x'),\n",
       " ('挺', 'd'),\n",
       " ('好', 'a'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('收费', 'n'),\n",
       " ('安装', 'v'),\n",
       " ('速度', 'n'),\n",
       " ('很快', 'd'),\n",
       " ('，', 'x'),\n",
       " ('管道', 'n'),\n",
       " ('走', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('也', 'd'),\n",
       " ('整齐', 'd'),\n",
       " ('，', 'x'),\n",
       " ('不错', 'a'),\n",
       " ('用', 'p'),\n",
       " ('了', 'ul'),\n",
       " ('好', 'a'),\n",
       " ('几天', 'm'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('才', 'd'),\n",
       " ('想', 'v'),\n",
       " ('起来', 'v'),\n",
       " ('晒', 'v'),\n",
       " ('单', 'n'),\n",
       " ('，', 'x'),\n",
       " ('差点', 'n'),\n",
       " ('忘', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('这款', 'r'),\n",
       " ('很', 'd'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('我', 'r'),\n",
       " ('很', 'd'),\n",
       " ('喜欢', 'v'),\n",
       " ('?', 'x'),\n",
       " ('已经', 'd'),\n",
       " ('安装', 'v'),\n",
       " ('但', 'c'),\n",
       " ('还', 'd'),\n",
       " ('没用', 'v'),\n",
       " (' ', 'x'),\n",
       " ('看上去', 'v'),\n",
       " ('这样', 'r'),\n",
       " (' ', 'x'),\n",
       " ('不多', 'd'),\n",
       " ('做', 'v'),\n",
       " ('评价', 'n'),\n",
       " (' ', 'x'),\n",
       " ('凑', 'v'),\n",
       " ('字', 'n'),\n",
       " ('的', 'uj'),\n",
       " ('非常', 'd'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('人员', 'n'),\n",
       " ('也', 'd'),\n",
       " ('很', 'd'),\n",
       " ('专业', 'n'),\n",
       " ('，', 'x'),\n",
       " ('值得', 'v'),\n",
       " ('信赖', 'n'),\n",
       " ('！', 'x'),\n",
       " ('给', 'p'),\n",
       " ('家里', 's'),\n",
       " ('买', 'v'),\n",
       " ('的', 'uj'),\n",
       " (' ', 'x'),\n",
       " ('挺好用', 'a'),\n",
       " ('的', 'uj'),\n",
       " (' ', 'x'),\n",
       " ('没', 'v'),\n",
       " ('在家', 'r'),\n",
       " (' ', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('很好', 'a'),\n",
       " ('之前', 'f'),\n",
       " ('装', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('太阳能', 'n'),\n",
       " ('。', 'x'),\n",
       " ('坏掉', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('现在', 't'),\n",
       " ('换', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('还', 'd'),\n",
       " ('方便', 'a'),\n",
       " ('一些', 'm'),\n",
       " ('。', 'x'),\n",
       " ('真心', 'd'),\n",
       " ('感觉', 'n'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('装', 'v'),\n",
       " ('好', 'a'),\n",
       " ('当晚', 't'),\n",
       " ('三个', 'm'),\n",
       " ('人', 'n'),\n",
       " ('冲凉', 'a'),\n",
       " ('还有', 'v'),\n",
       " ('热水', 'n'),\n",
       " ('没用', 'v'),\n",
       " ('完', 'v'),\n",
       " ('，', 'x'),\n",
       " ('好评', 'v'),\n",
       " ('真心', 'd'),\n",
       " ('不错', 'a'),\n",
       " ('！', 'x'),\n",
       " ('很', 'zg'),\n",
       " ('喜欢', 'v'),\n",
       " ('，', 'x'),\n",
       " ('大', 'a'),\n",
       " ('品牌', 'n'),\n",
       " ('！', 'x'),\n",
       " ('！', 'x'),\n",
       " ('！', 'x'),\n",
       " ('啊', 'y'),\n",
       " ('赞', 'v'),\n",
       " ('一个', 'm'),\n",
       " ('！', 'x'),\n",
       " ('！', 'x'),\n",
       " ('已经', 'd'),\n",
       " ('安装', 'v'),\n",
       " ('好', 'a'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('希望', 'v'),\n",
       " ('没什么', 'l'),\n",
       " ('问题', 'n'),\n",
       " ('。', 'x'),\n",
       " ('就是', 'd'),\n",
       " ('这么', 'r'),\n",
       " ('完美', 'a'),\n",
       " ('。', 'x'),\n",
       " ('以后', 'f'),\n",
       " ('不用', 'v'),\n",
       " ('天天', 't'),\n",
       " ('等', 'u'),\n",
       " ('太阳', 'ns'),\n",
       " ('了', 'ul'),\n",
       " ('。', 'x'),\n",
       " ('售后', 'n'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('预约', 'v'),\n",
       " ('安装', 'v'),\n",
       " ('挺', 'd'),\n",
       " ('方便', 'a'),\n",
       " ('的', 'uj'),\n",
       " ('！', 'x'),\n",
       " ('质量', 'n'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('暖水', 'n'),\n",
       " ('挺快', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('支持', 'v'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('物超所值', 'i'),\n",
       " ('凌晨', 't'),\n",
       " ('一点', 'm'),\n",
       " ('下单', 'n'),\n",
       " ('，', 'x'),\n",
       " ('点', 'm'),\n",
       " ('多', 'm'),\n",
       " ('送到', 'v'),\n",
       " ('，', 'x'),\n",
       " ('点', 'm'),\n",
       " ('员工', 'n'),\n",
       " ('上门', 'ns'),\n",
       " ('安装', 'v'),\n",
       " ('，', 'x'),\n",
       " ('速度', 'n'),\n",
       " ('效率', 'n'),\n",
       " ('扛', 'v'),\n",
       " ('扛', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('！', 'x'),\n",
       " ('特别', 'd'),\n",
       " ('是', 'v'),\n",
       " ('赞扬', 'v'),\n",
       " ('安装', 'v'),\n",
       " ('师傅', 'nr'),\n",
       " ('，', 'x'),\n",
       " ('特别', 'd'),\n",
       " ('专业', 'n'),\n",
       " ('，', 'x'),\n",
       " ('一', 'm'),\n",
       " ('进门', 'v'),\n",
       " ('就', 'd'),\n",
       " ('换上', 'v'),\n",
       " ('自己', 'r'),\n",
       " ('的', 'uj'),\n",
       " ('鞋套', 'n'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('过程', 'n'),\n",
       " ('的', 'uj'),\n",
       " ('弄脏', 'n'),\n",
       " ('的', 'uj'),\n",
       " ('地方', 'n'),\n",
       " ('全部', 'n'),\n",
       " ('擦', 'v'),\n",
       " ('干净', 'a'),\n",
       " ('，', 'x'),\n",
       " ('好评', 'v'),\n",
       " ('！', 'x'),\n",
       " ('试用', 'vn'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('这个', 'r'),\n",
       " ('量', 'n'),\n",
       " ('，', 'x'),\n",
       " ('两三个', 'm'),\n",
       " ('人用', 'n'),\n",
       " ('刚好', 'd'),\n",
       " ('合适', 'a'),\n",
       " ('。', 'x'),\n",
       " ('东西', 'ns'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('价格', 'n'),\n",
       " ('很', 'zg'),\n",
       " ('实惠', 'vn'),\n",
       " ('，', 'x'),\n",
       " ('试', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('下', 'v'),\n",
       " ('，', 'x'),\n",
       " ('加热', 'v'),\n",
       " ('很快', 'd'),\n",
       " ('，', 'x'),\n",
       " ('还', 'd'),\n",
       " ('省', 'n'),\n",
       " ('电', 'n'),\n",
       " ('，', 'x'),\n",
       " ('老爸', 'n'),\n",
       " ('说', 'v'),\n",
       " ('看起来', 'v'),\n",
       " ('很大', 'a'),\n",
       " ('气', 'n'),\n",
       " ('，', 'x'),\n",
       " ('遥控', 'vn'),\n",
       " ('挺', 'd'),\n",
       " ('灵敏', 'nr'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('客服', 'n'),\n",
       " ('很', 'zg'),\n",
       " ('负责', 'v'),\n",
       " ('，', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('才', 'd'),\n",
       " ('花', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('多', 'm'),\n",
       " ('，', 'x'),\n",
       " ('很', 'zg'),\n",
       " ('规范', 'n'),\n",
       " ('，', 'x'),\n",
       " ('强烈推荐', 'i'),\n",
       " ('！', 'x'),\n",
       " ('*', 'x'),\n",
       " ('下', 'f'),\n",
       " ('的', 'uj'),\n",
       " ('单', 'n'),\n",
       " ('。', 'x'),\n",
       " ('十四号', 'm'),\n",
       " ('送到', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('，', 'x'),\n",
       " ('打', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('电话', 'n'),\n",
       " ('，', 'x'),\n",
       " ('今天', 't'),\n",
       " ('师傅', 'nr'),\n",
       " ('就', 'd'),\n",
       " ('来', 'v'),\n",
       " ('安装', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('。', 'x'),\n",
       " ('师傅', 'nr'),\n",
       " ('态度', 'n'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('干活', 'a'),\n",
       " ('细致', 'a'),\n",
       " ('，', 'x'),\n",
       " ('拆', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('老', 'n'),\n",
       " ('，', 'x'),\n",
       " ('连', 'nr'),\n",
       " ('后面', 'f'),\n",
       " ('几年', 'm'),\n",
       " ('没擦', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('墙面', 'n'),\n",
       " ('都', 'd'),\n",
       " ('给', 'p'),\n",
       " ('擦', 'v'),\n",
       " ('干净', 'a'),\n",
       " ('了', 'ul'),\n",
       " ('。', 'x'),\n",
       " ('赞', 'v'),\n",
       " ('一个', 'm'),\n",
       " ('。', 'x'),\n",
       " ('收费', 'n'),\n",
       " ('也', 'd'),\n",
       " ('比较', 'd'),\n",
       " ('合理', 'vn'),\n",
       " ('，', 'x'),\n",
       " ('*', 'x'),\n",
       " ('块钱', 'n'),\n",
       " ('。', 'x'),\n",
       " ('刚', 'd'),\n",
       " ('装', 'v'),\n",
       " ('上', 'f'),\n",
       " ('，', 'x'),\n",
       " ('还', 'd'),\n",
       " ('没用', 'v'),\n",
       " ('。', 'x'),\n",
       " ('之前', 'f'),\n",
       " ('海尔', 'nrt'),\n",
       " ('的', 'uj'),\n",
       " ('用', 'p'),\n",
       " ('了', 'ul'),\n",
       " ('四年', 'm'),\n",
       " ('多', 'm'),\n",
       " ('，', 'x'),\n",
       " ('漏水', 'n'),\n",
       " ('了', 'ul'),\n",
       " ('。', 'x'),\n",
       " ('售后', 'n'),\n",
       " ('来看', 'u'),\n",
       " ('说', 'v'),\n",
       " ('是', 'v'),\n",
       " ('内胆', 'n'),\n",
       " ('漏', 'v'),\n",
       " ('了', 'ul'),\n",
       " ('，', 'x'),\n",
       " ('修', 'v'),\n",
       " ('不如', 'c'),\n",
       " ('买', 'v'),\n",
       " ('新', 'a'),\n",
       " ('的', 'uj'),\n",
       " ('。', 'x'),\n",
       " ('现在', 't'),\n",
       " ('保修', 'v'),\n",
       " ('八年', 't'),\n",
       " ('。', 'x'),\n",
       " ('总体', 'n'),\n",
       " ('不错', 'a'),\n",
       " ('，', 'x'),\n",
       " ('给', 'p'),\n",
       " ('好评', 'v'),\n",
       " ('。', 'x'),\n",
       " ('非常', 'd'),\n",
       " ('让', 'v'),\n",
       " ('人', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('满意', 'v'),\n",
       " ('，', 'x'),\n",
       " ('售后', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('认真负责', 'n'),\n",
       " ('，', 'x'),\n",
       " ('从', 'p'),\n",
       " ('货物', 'n'),\n",
       " ('到达', 'v'),\n",
       " ('目的地', 'n'),\n",
       " ('开始', 'v'),\n",
       " ('就', 'd'),\n",
       " ('咨询', 'vn'),\n",
       " ('安装', 'v'),\n",
       " ('事宜', 'n'),\n",
       " ('！', 'x'),\n",
       " ('指导', 'n'),\n",
       " ('安装', 'v'),\n",
       " ('人员', 'n'),\n",
       " ('到场', 'd'),\n",
       " ('，', 'x'),\n",
       " ('一直', 'd'),\n",
       " ('都', 'd'),\n",
       " ('是', 'v'),\n",
       " ('大', 'a'),\n",
       " ('厂家', 'n'),\n",
       " ('的', 'uj'),\n",
       " ('感觉', 'n'),\n",
       " ('！', 'x'),\n",
       " ('不愧', 'a'),\n",
       " ('销量', 'n'),\n",
       " ('那么', 'r'),\n",
       " ('高', 'a'),\n",
       " ('！', 'x'),\n",
       " ('安装', 'v'),\n",
       " ('人员', 'n'),\n",
       " ('讲解', 'v'),\n",
       " ('细致', 'a'),\n",
       " ('，', 'x'),\n",
       " ('从头到尾', 'i'),\n",
       " ('满分', 'd'),\n",
       " ('好评', 'v'),\n",
       " ('！', 'x'),\n",
       " ('质量', 'n'),\n",
       " ('非常', 'd'),\n",
       " ('好', 'a'),\n",
       " ('，', 'x'),\n",
       " ('与', 'p'),\n",
       " ('卖家', 'n'),\n",
       " ('描述', 'v'),\n",
       " ('的', 'uj'),\n",
       " ('完全一致', 'i'),\n",
       " ('，', 'x'),\n",
       " ('非常', 'd'),\n",
       " ('满意', 'v'),\n",
       " (',', 'x'),\n",
       " ('真的', 'd'),\n",
       " ('很', 'zg'),\n",
       " ('喜欢', 'v'),\n",
       " ('，', 'x'),\n",
       " ('完全', 'ad'),\n",
       " ('超出', 'v'),\n",
       " ('期望值', 'n'),\n",
       " ('，', 'x'),\n",
       " (' ', 'x'),\n",
       " ('发货', 'n'),\n",
       " ('速度', 'n'),\n",
       " (' ', 'x'),\n",
       " ('非常', 'd'),\n",
       " ('快', 'a'),\n",
       " ('，', 'x'),\n",
       " ('包装', 'v'),\n",
       " ('非常', 'd'),\n",
       " ('仔细', 'ad'),\n",
       " ('、', 'x'),\n",
       " ('严实', 'ad'),\n",
       " ('，', 'x'),\n",
       " (' ', 'x'),\n",
       " ('物流', 'n'),\n",
       " ('公司', 'n'),\n",
       " (' ', 'x'),\n",
       " ...]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "63794"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#分词及词性，去掉[]，拉平\n",
    "seg_content.head()\n",
    "\n",
    "seg_content_long=sum(seg_content,[])\n",
    "\n",
    "seg_content_long\n",
    "\n",
    "type(seg_content_long)\n",
    "len(seg_content_long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "('东西', 'ns')"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seg_content_long[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "63794"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "63794"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#得到加长版的分词、词性\n",
    "word_long=[x[0] for x in seg_content_long]\n",
    "nature_long=[x[1] for x in seg_content_long]\n",
    "\n",
    "len(word_long)\n",
    "len(nature_long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "63794"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#content_type拉长\n",
    "n_content_type=[ [x]*y for x,y in zip(list(reviews['content_type']),list(n_word))] #[x+1]*y,表示复制y份\n",
    "content_type_long=sum(n_content_type,[]) #表示去掉[]，拉平\n",
    "\n",
    "len(content_type_long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(63794, 4)"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index_content</th>\n",
       "      <th>word</th>\n",
       "      <th>nature</th>\n",
       "      <th>content_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>东西</td>\n",
       "      <td>ns</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>收到</td>\n",
       "      <td>v</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>这么久</td>\n",
       "      <td>r</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>，</td>\n",
       "      <td>x</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>都</td>\n",
       "      <td>d</td>\n",
       "      <td>pos</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   index_content word nature content_type\n",
       "0              1   东西     ns          pos\n",
       "1              1   收到      v          pos\n",
       "2              1  这么久      r          pos\n",
       "3              1    ，      x          pos\n",
       "4              1    都      d          pos"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "review_long=pd.DataFrame({'index_content':index_content_long,\n",
    "                        'word':word_long,\n",
    "                        'nature':nature_long,\n",
    "                        'content_type':content_type_long})\n",
    "review_long.shape\n",
    "review_long.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "（2）去除标点符号、去除停用词"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['ns', 'v', 'r', 'x', 'd', 'ul', 'a', 'n', 'u', 'nr', 'p', 'y',\n",
       "       'vn', 't', 'c', 'm', 'l', 'b', 'i', 'uj', 'zg', 's', 'uz', 'nz',\n",
       "       'f', 'uv', 'ad', 'q', 'j', 'g', 'ud', 'an', 'nrt', 'vg', 'ng', 'k',\n",
       "       'o', 'mq', 'df', 'e', 'vd', 'z', 'nt', 'tg', 'rz', 'ug', 'yg', 'h',\n",
       "       'vq', 'ag', 'rr'], dtype=object)"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "review_long['nature'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(51436, 4)"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#去除标点符号\n",
    "review_long_clean=review_long[review_long['nature']!='x'] #x表示标点符合\n",
    "review_long_clean.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5748"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "['\\ufeff \\n', '说\\n', '人\\n', '元\\n', 'hellip\\n']"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#导入停用词\n",
    "stop_path=open('./stoplist.txt','r',encoding='UTF-8')\n",
    "stop_words=stop_path.readlines()\n",
    "\n",
    "len(stop_words)\n",
    "stop_words[0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['\\ufeff ', '说', '人', '元', 'hellip']"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#停用词，预处理\n",
    "stop_words=[word.strip('\\n') for word in stop_words]\n",
    "stop_words[0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4455"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(25172, 4)"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#得到不含停用词的分词表\n",
    "word_long_clean=list(set(word_long)-set(stop_words))\n",
    "len(word_long_clean)\n",
    "\n",
    "review_long_clean=review_long_clean[review_long_clean['word'].isin(word_long_clean)]\n",
    "review_long_clean.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(3)在原df中，再增加一列，该分词在本条评论的位置"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "index_content\n",
       "1       14\n",
       "2        4\n",
       "3        2\n",
       "4       20\n",
       "5       23\n",
       "        ..\n",
       "1996     6\n",
       "1997    20\n",
       "1998     3\n",
       "1999    10\n",
       "2000     4\n",
       "Name: word, Length: 1964, dtype: int64"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "25172"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#再次统计每条评论的分词数量\n",
    "n_word=review_long_clean.groupby('index_content').count()['word']\n",
    "n_word\n",
    "\n",
    "index_word=[ list(np.arange(1,x+1)) for x in list(n_word)] \n",
    "index_word_long=sum(index_word,[]) #表示去掉[]，拉平\n",
    "\n",
    "len(index_word_long)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index_content</th>\n",
       "      <th>word</th>\n",
       "      <th>nature</th>\n",
       "      <th>content_type</th>\n",
       "      <th>index_word</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>东西</td>\n",
       "      <td>ns</td>\n",
       "      <td>pos</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>收到</td>\n",
       "      <td>v</td>\n",
       "      <td>pos</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>这么久</td>\n",
       "      <td>r</td>\n",
       "      <td>pos</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>忘</td>\n",
       "      <td>v</td>\n",
       "      <td>pos</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>好评</td>\n",
       "      <td>v</td>\n",
       "      <td>pos</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   index_content word nature content_type  index_word\n",
       "0              1   东西     ns          pos           1\n",
       "1              1   收到      v          pos           2\n",
       "2              1  这么久      r          pos           3\n",
       "5              1    忘      v          pos           4\n",
       "8              1   好评      v          pos           5"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "review_long_clean['index_word']=index_word_long\n",
    "review_long_clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "review_long_clean.to_csv('./1_review_long_clean.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(4)提取名词"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10189, 5)"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index_content</th>\n",
       "      <th>word</th>\n",
       "      <th>nature</th>\n",
       "      <th>content_type</th>\n",
       "      <th>index_word</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>东西</td>\n",
       "      <td>ns</td>\n",
       "      <td>pos</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>品牌</td>\n",
       "      <td>n</td>\n",
       "      <td>pos</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>信赖</td>\n",
       "      <td>n</td>\n",
       "      <td>pos</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>东西</td>\n",
       "      <td>ns</td>\n",
       "      <td>pos</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>整体</td>\n",
       "      <td>n</td>\n",
       "      <td>pos</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    index_content word nature content_type  index_word\n",
       "0               1   东西     ns          pos           1\n",
       "11              1   品牌      n          pos           6\n",
       "14              1   信赖      n          pos           8\n",
       "16              1   东西     ns          pos           9\n",
       "17              1   整体      n          pos          10"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_review_long_clean=review_long_clean[[ 'n' in nat for nat in review_long_clean.nature]]\n",
    "n_review_long_clean.shape\n",
    "n_review_long_clean.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "n      8086\n",
       "nr      724\n",
       "vn      699\n",
       "ns      416\n",
       "nz      136\n",
       "ng       60\n",
       "nrt      36\n",
       "an       25\n",
       "nt        7\n",
       "Name: nature, dtype: int64"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_review_long_clean.nature.value_counts()\n",
    "n_review_long_clean.to_csv('./1_n_review_long_clean.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "（5）词云图"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<wordcloud.wordcloud.WordCloud at 0x1c4286ecd08>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<wordcloud.wordcloud.WordCloud at 0x1c4286ecd08>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 1440x720 with 0 Axes>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x1c428edef48>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(-0.5, 1023.5, 857.5, -0.5)"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": 
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "font=r\"C:\\Windows\\Fonts\\msyh.ttc\"\n",
    "\n",
    "background_image=plt.imread('./pl.jpg')\n",
    "wordcloud = WordCloud(font_path=font, max_words = 100, background_color='white',mask=background_image) #width=1600,height=1200, mode='RGBA'\n",
    "wordcloud.generate_from_frequencies(Counter(review_long_clean.word.values))\n",
    "wordcloud.to_file('1_分词后的词云图.png')\n",
    "\n",
    "plt.figure(figsize=(20,10))\n",
    "plt.imshow(wordcloud)\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<wordcloud.wordcloud.WordCloud at 0x1c429f11088>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<wordcloud.wordcloud.WordCloud at 0x1c429f11088>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 1440x720 with 0 Axes>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x1c428eae348>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(-0.5, 688.5, 583.5, -0.5)"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": 
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "font=r\"C:\\Windows\\Fonts\\msyh.ttc\"\n",
    "\n",
    "background_image=plt.imread('./p4.jpg')\n",
    "wordcloud = WordCloud(font_path=font, max_words = 100, mode='RGBA' ,background_color='white',mask=background_image) #width=1600,height=1200\n",
    "wordcloud.generate_from_frequencies(Counter(n_review_long_clean.word.values))\n",
    "wordcloud.to_file('1_分词后的词云图(名词）.png')\n",
    "\n",
    "plt.figure(figsize=(20,10))\n",
    "plt.imshow(wordcloud)\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 三、模型构建"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### （一）基于决策树的情感分类"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1964"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1964"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "['东西 收到 这么久 忘 好评 品牌 值得 信赖 东西 整体 个人感觉 不错 值得 拥有',\n",
       " '安装 师傅 力 感谢',\n",
       " '安装 满意',\n",
       " '收到 自营 商品 发货 速度 品质 保障 安装 效果 宝贝 喜欢 冬天 小时 热水 自营 值得 信赖 值得 推荐 自营',\n",
       " ...]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#第一步：构造特征空间和标签\n",
    "\n",
    "Y=[]\n",
    "for ind in review_long_clean.index_content.unique():\n",
    "    y=[ word for word in review_long_clean.content_type[review_long_clean.index_content==ind].unique() ]\n",
    "    Y.append(y)\n",
    "len(Y)\n",
    "\n",
    "X=[]\n",
    "for ind in review_long_clean.index_content.unique():\n",
    "    term=[ word for word in review_long_clean.word[review_long_clean.index_content==ind].values ]\n",
    "    X.append(' '.join(term))\n",
    "len(X)\n",
    "\n",
    "X\n",
    "Y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### （二）情感分析"
   ]
  },
  {
   "attachments": {
    "image.png": {
     "image/png":     }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "数据预处理的思路与目标\n",
    "\n",
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(1)导入评价情感词"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "#来自知网发布的情感分析用词语集\n",
    "\n",
    "pos_comment=pd.read_csv('./正面评价词语（中文）.txt',header=None,sep='\\n',encoding='utf-8') \n",
    "neg_comment=pd.read_csv('./负面评价词语（中文）.txt',header=None,sep='\\n',encoding='utf-8')\n",
    "\n",
    "pos_emotion=pd.read_csv('./正面情感词语（中文）.txt',header=None,sep='\\n',encoding='utf-8')\n",
    "neg_emotion=pd.read_csv('./负面情感词语（中文）.txt',header=None,sep='\\n',encoding='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3743, 1)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(3138, 1)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(833, 1)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "(1251, 1)"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pos_comment.shape\n",
    "neg_comment.shape\n",
    "\n",
    "pos_emotion.shape\n",
    "neg_emotion.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4576, 1)"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### （三）基于LDA模型的主题分析\n",
    "\n",
    "优点：不需要人工调试，用相对少的迭代找到最优的主题结构。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "（1）建立词典、语料库"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'ml_type'",
     "output_type": "error",
     "traceback": [
     ]
    }
   ],
   "source": [
    "data=review_mltype.copy()\n",
    "\n",
    "word_data_pos=data[data['ml_type']=='pos']\n",
    "word_data_neg=data[data['ml_type']=='neg']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "#建立词典，去重\n",
    "\n",
    "pos_dict=corpora.Dictionary([ [i] for i in word_data_pos.word]) #shape=(n,1)\n",
    "neg_dict=corpora.Dictionary([ [i] for i in word_data_neg.word])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dictionary(1679 unique tokens: ['东西', '收到', '这么久', '忘', '好评']...)\n"
     ]
    }
   ],
   "source": [
    "print(pos_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "#建立语料库\n",
    "\n",
    "pos_corpus=[ pos_dict.doc2bow(j) for j in [ [i] for i in word_data_pos.word] ] #shape=(n,(2,1))\n",
    "neg_corpus=[ neg_dict.doc2bow(j) for j in [ [i] for i in word_data_neg.word] ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6737"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "1679"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "6737"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(word_data_pos.word)\n",
    "len(pos_dict)\n",
    "len(pos_corpus)\n",
    "pos_corpus  #元素是元组，元组（x,y),x是在词典中的位置，y是1表示存在。"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(2)主题数寻优\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "#构造主题数寻优函数\n",
    "\n",
    "def cos(vector1,vector2):\n",
    "    '''\n",
    "    函数功能：余玄相似度函数\n",
    "    '''\n",
    "    dot_product=0.0\n",
    "    normA=0.0\n",
    "    normB=0.0\n",
    "    for a,b in zip(vector1,vector2):\n",
    "        dot_product +=a*b\n",
    "        normA +=a**2\n",
    "        normB +=b**2\n",
    "    if normA==0.0 or normB==0.0:\n",
    "        return None\n",
    "    else:\n",
    "        return ( dot_product/((normA*normB)**0.5) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "#主题数寻优\n",
    "#这个函数可以重复调用，解决其他项目的问题\n",
    "\n",
    "def LDA_k(x_corpus,x_dict):\n",
    "    '''\n",
    "    函数功能：\n",
    "    '''\n",
    "    #初始化平均余玄相似度\n",
    "    mean_similarity=[]\n",
    "    mean_similarity.append(1)\n",
    "    \n",
    "    #循环生成主题并计算主题间相似度\n",
    "    for i in np.arange(2,11):\n",
    "        lda=models.LdaModel(x_corpus,num_topics=i,id2word=x_dict) #LDA模型训练\n",
    "        \n",
    "        for j in np.arange(i):\n",
    "            term=lda.show_topics(num_words=50)\n",
    "        \n",
    "        #提取各主题词\n",
    "        top_word=[] #shape=(i,50)\n",
    "        for k in np.arange(i):\n",
    "            top_word.append( [''.join(re.findall('\"(.*)\"',i)) for i in term[k][1].split('+')]) #列出所有词\n",
    "        \n",
    "        #构造词频向量\n",
    "        word=sum(top_word,[]) #列车所有词\n",
    "        unique_word=set(word) #去重\n",
    "        \n",
    "        #构造主题词列表，行表示主题号，列表示各主题词\n",
    "        mat=[] #shape=(i,len(unique_word))\n",
    "        for j in np.arange(i):\n",
    "            top_w=top_word[j]\n",
    "            mat.append( tuple([ top_w.count(k) for k in unique_word ])) #统计list中元素的频次，返回元组\n",
    "        \n",
    "        #两两组合。方法一\n",
    "        p=list(itertools.permutations(list(np.arange(i)),2)) #返回可迭代对象的所有数学全排列方式。\n",
    "        y=len(p) # y=i*(i-1)\n",
    "        top_similarity=[0]\n",
    "        for w in np.arange(y):\n",
    "            vector1=mat[p[w][0]]\n",
    "            vector2=mat[p[w][1]]\n",
    "            top_similarity.append(cos(vector1,vector2))\n",
    "\n",
    "#        #两两组合，方法二\n",
    "#        for x in range(i-1):\n",
    "#            for y in range(x,i):\n",
    "            \n",
    "        #计算平均余玄相似度\n",
    "        mean_similarity.append(sum(top_similarity)/ y)\n",
    "    return mean_similarity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1,\n",
       " 0.08,\n",
       " 0.006666666666666667,\n",
       " 0.006666666666666667,\n",
       " 0.01,\n",
       " 0.012000000000000004,\n",
       " 0.016190476190476193,\n",
       " 0.027142857142857156,\n",
       " 0.04055555555555558,\n",
       " 0.060000000000000005]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[1,\n",
       " 0.0,\n",
       " 0.0,\n",
       " 0.0,\n",
       " 0.002,\n",
       " 0.0026666666666666666,\n",
       " 0.0038095238095238095,\n",
       " 0.0064285714285714285,\n",
       " 0.006111111111111112,\n",
       " 0.021777777777777788]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#计算主题平均余玄相似度\n",
    "\n",
    "pos_k=LDA_k(pos_corpus,pos_dict)\n",
    "neg_k=LDA_k(neg_corpus,neg_dict)\n",
    "\n",
    "pos_k\n",
    "neg_k"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1404658b7c8>"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, '正面评论LDA主题数寻优')"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.Series(pos_k,index=range(1,11)).plot()\n",
    "plt.title('正面评论LDA主题数寻优')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x14045e4a4c8>"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, '负面评论LDA主题数寻优')"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.Series(neg_k,index=range(1,11)).plot()\n",
    "plt.title('负面评论LDA主题数寻优')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(0,\n",
       "  '0.087*\"安装\" + 0.021*\"送货\" + 0.020*\"很快\" + 0.014*\"售后\" + 0.013*\"客服\" + 0.012*\"东西\" + 0.011*\"信赖\" + 0.011*\"物流\" + 0.010*\"师傅\" + 0.009*\"购物\"'),\n",
       " (1,\n",
       "  '0.039*\"满意\" + 0.020*\"师傅\" + 0.018*\"服务\" + 0.018*\"不错\" + 0.014*\"好评\" + 0.013*\"值得\" + 0.011*\"人员\" + 0.009*\"送\" + 0.009*\"太\" + 0.008*\"家里\"')]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": [
       "[(0,\n",
       "  '0.021*\"垃圾\" + 0.018*\"差\" + 0.013*\"不好\" + 0.013*\"加热\" + 0.012*\"小时\" + 0.012*\"收\" + 0.011*\"收费\" + 0.011*\"安装\" + 0.011*\"打电话\" + 0.011*\"装\"'),\n",
       " (1,\n",
       "  '0.081*\"安装\" + 0.020*\"售后\" + 0.020*\"师傅\" + 0.019*\"太\" + 0.016*\"安装费\" + 0.015*\"慢\" + 0.014*\"东西\" + 0.013*\"客服\" + 0.011*\"贵\" + 0.011*\"太慢\"')]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pos_lda=models.LdaModel(pos_corpus,num_topics=2,id2word=pos_dict)\n",
    "neg_lda=models.LdaModel(neg_corpus,num_topics=2,id2word=neg_dict)\n",
    "\n",
    "pos_lda.print_topics(num_topics=10)\n",
    "neg_lda.print_topics(num_topics=10)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
